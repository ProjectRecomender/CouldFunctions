import numpy as np
import json

import firebase_admin
from firebase_admin import credentials
from firebase_admin import firestore

# Use the application default credentials
cred = credentials.ApplicationDefault()
firebase_admin.initialize_app(cred, {
  'projectId': 'proven-mystery-288519',
})

db = firestore.client()


def hello_firestore(event, context):
   """Triggered by a change to a Firestore document.
   Args:
        event (dict): Event payload.
        context (google.cloud.functions.Context): Metadata for the event.
   """
   resource_string = context.resource
   # print out the resource string that triggered the function
   print(f"Function triggered by change to: {resource_string}.")
   # now print out the entire event object
   print("Hello")
   print(event['value']['fields']['answered']['arrayValue']['values'])
   print("Hello2")
   print(type(event['value']['fields']['answered']['arrayValue']['values']))
   
   a = []
   for ele in event['value']['fields']['answered']['arrayValue']['values']:
    a.append(ele['mapValue']['fields']['value']['doubleValue'])
 
   li = [ float(x) for x in a ]
   print(li)
   x = np.array(a)
   print(x)
   arr = np.exp(x) / np.sum(np.exp(x), axis=0)
   print(arr)
   cl = arr.argmax(axis=0)
   n = 3
   idx = np.argpartition(arr, -n)[-n:]
   indices = idx[np.argsort((-arr)[idx])]
   print(indices)
   ans = list(indices)
   print(type(ans[0]))
   data = {
   u'classes': [str(ans[0]),str(ans[1]),str(ans[2])]
   }
 
   # Add a new doc in collection 'cities' with ID 'LA'
   db.collection(u'data').document(u'responses').set(data)

   
